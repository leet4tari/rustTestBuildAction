---
name: Matrix Test

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - build-*

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    env:
      # Set to force version number, e.g., when no tag exists.
      LEET_VERSION: TEST-0.0.0
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      leet_version: ${{ env.LEET_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.LEET_VERSION == ''
        run: |
          echo "LEET_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.LEET_VERSION }}"

      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.LEET_VERSION }}
          release_name: ${{ env.LEET_VERSION }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

  matrix-prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Set Matrix
        id: set-matrix
        run: |
          # matrix=$( jq -s -c .[] .github/workflows/base_node_binaries.json )
          # matrix=$( jq -s -c .[] .github/workflows/matrix-test.json )
          # target selection of build images
          # matrix_selection=$( jq -c '.[] | select( ."build_enabled" != false )' .github/workflows/matrix-test.json )
          matrix_selection=$( jq -c '.[] | select( ."name" == "linux-x86" )' .github/workflows/matrix-test.json )
          # Rebuild the json matrix
          matrix=$(echo ${matrix_selection} | jq -s -c '{"builds": .}')
          echo $matrix
          echo $matrix | jq .
          echo "::set-output name=matrix::$matrix"

  matrix-check:
    runs-on: ubuntu-latest
    needs: matrix-prep
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix-prep.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml

  build:
    name: Building ${{ matrix.builds.name }} on ${{ matrix.builds.runs-on }}
    needs: [ matrix-prep, create-release ]
    #needs: matrix-prep
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.builds.runs-on }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ matrix.builds.rust }}
          target: ${{ matrix.builds.target }}
          override: true

      - name: Cache cargo files and outputs
        uses: Swatinem/rust-cache@v1

      - name: Build rust binaries - Normal
        if: ${{ matrix.builds.name != 'linux-arm64' }}
        uses: actions-rs/cargo@v1
        env:
          # RUSTFLAGS: "-C target_cpu=${{ matrix.builds.target_cpu }}"
          ROARING_ARCH: "${{ matrix.builds.target_cpu }}"
        with:
          use-cross: ${{ matrix.builds.cross }}
          command: build
          args: --release --target ${{ matrix.builds.target }} --features ${{ matrix.builds.features }} ${{ matrix.builds.target_bins }}

      - name: Artifact upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.builds.target }}-cross-compile-sample
          path: target/${{ matrix.builds.target }}/release/cross-compile-sample

      - name: Upload release archive
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            LICENSE
            README.md
            target/${{ matrix.builds.target }}/release/cross-compile-sample
