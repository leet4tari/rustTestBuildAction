---
name: Matrix Test

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - build-*

jobs:
  matrix-prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Set Matrix
        id: set-matrix
        run: |
          # matrix=$( cat .github/workflows/base_node_binaries.json | jq -s -c .[] )
          matrix=$( jq -s -c .[] .github/workflows/matrix-test.json )
          echo $matrix
          echo $matrix | jq .
          echo "::set-output name=matrix::$matrix"

  matrix-check:
    runs-on: ubuntu-latest
    needs: matrix-prep
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix-prep.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml

  build:
    name: Build ${{ matrix.build }} on ${{ matrix.os }}
    needs: matrix-prep
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
#      matrix:
#        build: ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
#      matrix:
#        build:
#          [
#            linux-x86_64, linux-arm64,
#          ]
#            linux-x86_64, linux-arm64,
#            macos-x86_64, macos-arm64,
#            windows-x64, windows-arm64,
    #runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

#      - name: Dump matrix
#        env:
#        run: echo ${{ matrix }}

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Dump matrix context OS
        env:
          MATRIX_CONTEXT_OS: ${{ fromJson(matrix).builds.os }}
        run: echo "$MATRIX_CONTEXT_OS"

      - name: Testing
        shell: bash
        run: |
          echo "${{ matrix.build }}"
          which jq
          jq --version
          ls -al .github/workflows/base_node_binaries.json
          cat .github/workflows/base_node_binaries.json
          jq -s -c .[] .github/workflows/base_node_binaries.json
          echo $(jq --arg jsonVar "${{ matrix.build }}" -r '. [] | select(."build"==$jsonVar) | to_entries[] | .key + "=" + ( .value | tostring )' .github/workflows/base_node_binaries.json )
          echo ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
          echo ${{ fromJson(needs.matrix-prep.outputs.matrix).builds }}
