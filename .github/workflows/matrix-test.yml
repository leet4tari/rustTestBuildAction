---
name: Matrix Test

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - build-*

jobs:
  matrix-prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Set Matrix
        id: set-matrix
        run: |
          # matrix=$( jq -s -c .[] .github/workflows/base_node_binaries.json )
          # matrix=$( jq -s -c .[] .github/workflows/matrix-test.json )
          # target selection of build images
          matrix_selection=$( jq -c '.builds[] | select( ."build_enabled" != false )' .github/workflows/matrix-test.json )
          # Rebuild the json matrix
          matrix=$(echo ${matrix_selection} | jq -s -c '{"builds": .}')
          echo $matrix
          echo $matrix | jq .
          echo "::set-output name=matrix::$matrix"

  matrix-check:
    runs-on: ubuntu-latest
    needs: matrix-prep
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix-prep.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml

  build:
    name: Building ${{ matrix.builds.name }} on ${{ matrix.builds.runs-on }}
    needs: matrix-prep
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.builds.runs-on }}
    steps:
    #continue-on-error: true
      - uses: actions/checkout@v2

      - name: Dump matrix context
        continue-on-error: true
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Dump matrix builds context
        continue-on-error: true
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix.builds) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Dump matrix builds os context
        continue-on-error: true
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix.builds.os) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Dump matrix builds target_cpu context
        continue-on-error: true
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix.builds.target_cpu) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Testing
        continue-on-error: true
        shell: bash
        run: |
          echo "${{ matrix.builds }}"
          jq -s -c .[] .github/workflows/base_node_binaries.json
          # echo $(jq --arg jsonVar "${{ matrix.builds }}" -r '. [] | select(."build"==$jsonVar) | to_entries[] | .key + "=" + ( .value | tostring )' .github/workflows/base_node_binaries.json )
          echo ${{ fromJson(needs.matrix-prep.outputs.matrix) }}
          echo ${{ fromJson(needs.matrix-prep.outputs.matrix.builds) }}
